(this["webpackJsonpreact-chat"]=this["webpackJsonpreact-chat"]||[]).push([[0],{13:function(e,s,n){"use strict";n.r(s);var t=n(0),a=n.n(t),o=n(3),r=n.n(o),i=n(1),l=n(4),u=n(5),c=n(6),d=n(7),g=function(e){Object(d.a)(n,e);var s=Object(c.a)(n);function n(e){var t;return Object(l.a)(this,n),(t=s.call(this,e)).wsOnConnection=function(e,s){s.send(JSON.stringify({collection:"messages",type:"subscription",query:"\n      subscription {\n        newMessageSub {\n          message\n        }\n      }\n    "})),s.send(JSON.stringify({collection:"messages",type:"query",query:"\n      query {\n        reader {\n          messages {\n            list {\n              message\n            }\n          }\n        }\n      }\n    "})),s.send(JSON.stringify({collection:"users",type:"subscription",query:"\n      subscription {\n        usersStatusSub {\n          id\n          username\n          status\n        }\n      }\n    "})),s.send(JSON.stringify({collection:"users",type:"query",query:"\n      {\n        reader {\n          users {\n            list {\n              id\n              username\n              status\n            }\n          }\n        }\n      }\n    "}))},t.wsMessageReceived=function(e){console.log("got ws msg:",e);var s=JSON.parse(e.data);s.errors?console.log("got error back"):"messages"===s.collection?t.updateMessages(s.data):"users"===s.collection&&t.updateUsers(s.data)},t.handleEditNewMessage=function(e){t.setState({newMessage:e.target.value})},t.handleSendNewMessage=function(){var e,s=t.state,n=s.wsConnection,a=s.newMessage;n.send((e=a,JSON.stringify({collection:"messages",type:"mutation",query:'\n      mutation {\n        writer {\n          addMessage(message: "'.concat(e,'") {\n            message\n          }\n        }\n      }\n    ')}))),t.setState({newMessage:""})},t.updateUsers=function(e){var s,n,a;console.log(e);var o=t.state.users;if(null===e||void 0===e||null===(s=e.reader)||void 0===s||null===(n=s.users)||void 0===n?void 0:n.list){var r=e.reader.users.list;t.setState({users:[].concat(Object(i.a)(o),Object(i.a)(r))})}else if(null===e||void 0===e||null===(a=e.usersStatusSub)||void 0===a?void 0:a.id){var l=o.map((function(s){return s.id===e.usersStatusSub.id?e.usersStatusSub:s}));t.setState({users:Object(i.a)(l)})}},t.state={messages:[],newMessage:"",users:[],wsConnection:null},t}return Object(u.a)(n,[{key:"componentDidMount",value:function(){var e=this,s=new WebSocket("ws://localhost:3001/subscriptions");s.onopen=function(n){return e.wsOnConnection(n,s)},s.onmessage=this.wsMessageReceived,s.onclose=function(){console.log("connection closed")},this.setState({wsConnection:s})}},{key:"updateMessages",value:function(e){var s,n,t;console.log(e);var a=this.state.messages,o=[];(null===e||void 0===e||null===(s=e.reader)||void 0===s||null===(n=s.messages)||void 0===n?void 0:n.list)?o=e.reader.messages.list:(null===e||void 0===e||null===(t=e.newMessageSub)||void 0===t?void 0:t.message)&&(o=[e.newMessageSub]),this.setState({messages:[].concat(Object(i.a)(a),Object(i.a)(o))})}},{key:"render",value:function(){var e=this.state,s=e.messages,n=e.newMessage,t=e.users,o=e.wsConnection;return a.a.createElement("div",{style:{display:"flex"}},a.a.createElement("div",{style:{flex:"1"}},t.map((function(e){return a.a.createElement("p",{key:e.id,style:{color:"online"===e.status?"green":"black"}},e.username)}))),a.a.createElement("div",{style:{flex:"1"}},s.map((function(e){return a.a.createElement("p",{key:e.message},e.message)})),a.a.createElement("div",null,a.a.createElement("input",{value:n,onChange:this.handleEditNewMessage}),a.a.createElement("button",{onClick:this.handleSendNewMessage,style:{backgroundColor:o?"green":"red"}},"click"))))}}]),n}(t.Component);var m=function(){return a.a.createElement("div",null,"Welcome",a.a.createElement(g,null))};r.a.render(a.a.createElement(m,null),document.getElementById("root"))},8:function(e,s,n){e.exports=n(13)}},[[8,1,2]]]);
//# sourceMappingURL=main.57ab78ac.chunk.js.map